// Code generated by protoc-gen-go. DO NOT EDIT.
// source: canary.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CanaryRequest struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanaryRequest) Reset()         { *m = CanaryRequest{} }
func (m *CanaryRequest) String() string { return proto.CompactTextString(m) }
func (*CanaryRequest) ProtoMessage()    {}
func (*CanaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33e50019d20af3e6, []int{0}
}

func (m *CanaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanaryRequest.Unmarshal(m, b)
}
func (m *CanaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanaryRequest.Marshal(b, m, deterministic)
}
func (m *CanaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanaryRequest.Merge(m, src)
}
func (m *CanaryRequest) XXX_Size() int {
	return xxx_messageInfo_CanaryRequest.Size(m)
}
func (m *CanaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CanaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CanaryRequest proto.InternalMessageInfo

func (m *CanaryRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CanaryResponse struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Ttl                  int32    `protobuf:"varint,2,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Cookie               string   `protobuf:"bytes,3,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CanaryResponse) Reset()         { *m = CanaryResponse{} }
func (m *CanaryResponse) String() string { return proto.CompactTextString(m) }
func (*CanaryResponse) ProtoMessage()    {}
func (*CanaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33e50019d20af3e6, []int{1}
}

func (m *CanaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CanaryResponse.Unmarshal(m, b)
}
func (m *CanaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CanaryResponse.Marshal(b, m, deterministic)
}
func (m *CanaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CanaryResponse.Merge(m, src)
}
func (m *CanaryResponse) XXX_Size() int {
	return xxx_messageInfo_CanaryResponse.Size(m)
}
func (m *CanaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CanaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CanaryResponse proto.InternalMessageInfo

func (m *CanaryResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *CanaryResponse) GetTtl() int32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *CanaryResponse) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func init() {
	proto.RegisterType((*CanaryRequest)(nil), "proto.CanaryRequest")
	proto.RegisterType((*CanaryResponse)(nil), "proto.CanaryResponse")
}

func init() { proto.RegisterFile("canary.proto", fileDescriptor_33e50019d20af3e6) }

var fileDescriptor_33e50019d20af3e6 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0xae, 0xd2, 0x40,
	0x14, 0x86, 0x9d, 0x12, 0x30, 0x4c, 0x84, 0x90, 0x11, 0x4d, 0x6d, 0x5c, 0x90, 0x2e, 0x0c, 0x12,
	0xdb, 0xc1, 0xba, 0xeb, 0x4a, 0x24, 0x44, 0x4c, 0xd0, 0x05, 0xec, 0x4c, 0x5c, 0x4c, 0xc7, 0x49,
	0xa9, 0x96, 0x39, 0xe3, 0xcc, 0x14, 0x74, 0xeb, 0x23, 0xe8, 0x3b, 0xdc, 0x17, 0x62, 0x7f, 0x57,
	0xf7, 0x41, 0x6e, 0x3a, 0x85, 0xc5, 0xbd, 0x6c, 0xee, 0xea, 0x9c, 0xf3, 0xe7, 0xeb, 0xff, 0x9f,
	0x9c, 0x0e, 0x7e, 0xc2, 0x99, 0x64, 0xfa, 0x4f, 0xac, 0x34, 0x58, 0x20, 0x6d, 0x57, 0x82, 0x97,
	0x39, 0x40, 0x5e, 0x0a, 0xca, 0x54, 0x41, 0x99, 0x94, 0x60, 0x99, 0x2d, 0x40, 0x9a, 0x06, 0x0a,
	0xde, 0xb8, 0xc2, 0xa3, 0x5c, 0xc8, 0xc8, 0x1c, 0x58, 0x9e, 0x0b, 0x4d, 0x41, 0x39, 0xe2, 0x92,
	0x0e, 0x5f, 0xe3, 0xde, 0xdc, 0x45, 0xac, 0xc5, 0xaf, 0x4a, 0x18, 0x4b, 0x7c, 0xfc, 0x78, 0x2f,
	0xb4, 0x29, 0x40, 0xfa, 0x68, 0x84, 0xc6, 0xdd, 0xf5, 0x79, 0x0c, 0x57, 0xb8, 0x7f, 0x46, 0x8d,
	0x02, 0x69, 0x04, 0x19, 0xe0, 0x96, 0xd0, 0xfa, 0xc4, 0xd5, 0x6d, 0xad, 0x58, 0x5b, 0xfa, 0xde,
	0x08, 0x8d, 0xdb, 0xeb, 0xba, 0x25, 0xcf, 0x71, 0x87, 0x03, 0xfc, 0x2c, 0x84, 0xdf, 0x72, 0xd8,
	0x69, 0x4a, 0xbe, 0xe1, 0x4e, 0xe3, 0x46, 0x36, 0xb8, 0xbb, 0x11, 0xf6, 0x34, 0x0c, 0x9b, 0xbd,
	0xe2, 0x3b, 0x4b, 0x05, 0xcf, 0xee, 0xa9, 0x4d, 0x7e, 0xf8, 0xe2, 0xef, 0xf1, 0xe6, 0xbf, 0xf7,
	0x34, 0xec, 0xbb, 0x53, 0xec, 0xa7, 0xb4, 0xb9, 0x56, 0x8a, 0x26, 0x1f, 0xae, 0xd1, 0xbf, 0xd9,
	0x11, 0x91, 0x2b, 0x74, 0x8e, 0x09, 0x3f, 0xe3, 0x1e, 0x1c, 0xe4, 0xbc, 0x84, 0xea, 0xfb, 0xe8,
	0xe3, 0x2e, 0x5b, 0x92, 0x57, 0x5b, 0x6b, 0x95, 0x49, 0x29, 0xcd, 0x0b, 0xbb, 0xad, 0xb2, 0x98,
	0xc3, 0x8e, 0x72, 0xa1, 0x65, 0x06, 0xbf, 0x29, 0xf0, 0xc2, 0x44, 0x8d, 0x5b, 0x30, 0x34, 0x95,
	0x52, 0xa0, 0xed, 0x7b, 0x38, 0x48, 0x5e, 0x7f, 0x5e, 0x93, 0x93, 0x25, 0xc6, 0x33, 0xc5, 0xf8,
	0x56, 0x44, 0x49, 0x3c, 0x25, 0xe9, 0xc3, 0xbc, 0x68, 0x56, 0x42, 0x46, 0x77, 0xcc, 0x58, 0xa1,
	0xe9, 0xea, 0xd3, 0x7c, 0xf1, 0x65, 0xb3, 0x48, 0x5a, 0x6f, 0xe3, 0xe9, 0xc4, 0x43, 0x5e, 0x32,
	0x60, 0x4a, 0x95, 0x05, 0x77, 0xff, 0x87, 0xfe, 0x30, 0x20, 0xd3, 0x0b, 0x45, 0x3f, 0xfa, 0xda,
	0x3c, 0x82, 0xac, 0xe3, 0xca, 0xbb, 0xdb, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x7b, 0x74, 0x9c,
	0x22, 0x02, 0x00, 0x00,
}
